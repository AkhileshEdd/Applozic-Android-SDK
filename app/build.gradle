apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

ext{
    defaultCompileSdkVersion = 27
    defaultTargetSdkVersion = 27
    defaultBuildToolVersion = "27.0.3"
    defaultSupportLibVersion = "27.1.1"
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}
android {
    compileSdkVersion rootProject.hasProperty("compileSdkVersion") ? rootProject.compileSdkVersion : defaultCompileSdkVersion
    buildToolsVersion rootProject.hasProperty("buildToolVersion") ? rootProject.buildToolVersion : defaultBuildToolVersion


    defaultConfig {
        applicationId "com.mobicomkit.sample"
        minSdkVersion 14
        targetSdkVersion rootProject.hasProperty("targetSdkVersion") ? rootProject.targetSdkVersion : defaultTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled false
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.includeAndroidResources true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {

        abortOnError false

    }



    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ECLIPSE_.SF'
        exclude 'META-INF/ECLIPSE_.RSA'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(':mobicomkitui')
    //Note: use this for customization
    //implementation 'com.applozic.communication.uiwidget:mobicomkitui:5.33'
    implementation "com.android.support:support-v4:${rootProject.hasProperty("supportLibVersion") ? rootProject.supportLibVersion : defaultSupportLibVersion}"
    implementation "com.android.support:appcompat-v7:${rootProject.hasProperty("supportLibVersion") ? rootProject.supportLibVersion : defaultSupportLibVersion}"
    implementation "com.android.support:design:${rootProject.hasProperty("supportLibVersion") ? rootProject.supportLibVersion : defaultSupportLibVersion}"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true;
    }

    androidTestImplementation "com.android.support:support-annotations:${rootProject.hasProperty("supportLibVersion") ? rootProject.supportLibVersion : defaultSupportLibVersion}"
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation ('org.mockito:mockito-android:2.6.3'){
        exclude group: 'org.hamcrest', module:'hamcrest-core'
    }
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation  'com.google.dagger:dagger:2.13'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'
    androidTestImplementation('org.droidparts.dexmaker:dexmaker:1.5') {
        exclude module: 'objenesis'
    }
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'junit:junit:4.12'
}
apply plugin: 'com.google.gms.google-services'
